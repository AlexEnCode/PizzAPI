// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzAPI.Data;

#nullable disable

namespace PizzAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PizzAPI.models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId");

                    b.ToTable("Ingredient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Freshly made tomato sauce",
                            Name = "Tomato sauce",
                            PizzaId = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "High-quality mozzarella cheese",
                            Name = "Mozzarella cheese",
                            PizzaId = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Fresh basil leaves",
                            Name = "Basil",
                            PizzaId = 0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Spicy pepperoni slices",
                            Name = "Pepperoni",
                            PizzaId = 0
                        },
                        new
                        {
                            Id = 5,
                            Description = "Fresh sliced mushrooms",
                            Name = "Mushrooms",
                            PizzaId = 0
                        },
                        new
                        {
                            Id = 6,
                            Description = "Assorted bell peppers",
                            Name = "Bell peppers",
                            PizzaId = 0
                        },
                        new
                        {
                            Id = 7,
                            Description = "Sliced onions",
                            Name = "Onions",
                            PizzaId = 0
                        });
                });

            modelBuilder.Entity("PizzAPI.models.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.Property<bool>("IsSpicy")
                        .HasColumnType("bit")
                        .HasColumnName("isSpicy");

                    b.Property<bool>("IsVegetarian")
                        .HasColumnType("bit")
                        .HasColumnName("isVegetarian");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasPrecision(37, 2)
                        .HasColumnType("decimal(37,2)")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.ToTable("pizza");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Tomato sauce, mozzarella cheese, basil",
                            Image = "margherita.jpg",
                            IsSpicy = false,
                            IsVegetarian = true,
                            Name = "Margherita",
                            Price = 9.99m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Tomato sauce, mozzarella cheese, pepperoni slices",
                            Image = "pepperoni.jpg",
                            IsSpicy = true,
                            IsVegetarian = false,
                            Name = "Pepperoni",
                            Price = 11.99m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Tomato sauce, mozzarella cheese, mushrooms, bell peppers, onions",
                            Image = "vegetarian_deluxe.jpg",
                            IsSpicy = false,
                            IsVegetarian = true,
                            Name = "Vegetarian Deluxe",
                            Price = 12.99m
                        });
                });

            modelBuilder.Entity("PizzAPI.models.PizzaIngredient", b =>
                {
                    b.Property<int>("PizzaId")
                        .HasColumnType("int")
                        .HasColumnName("pizza_id");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int")
                        .HasColumnName("ingredient_id");

                    b.HasKey("PizzaId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("IngredientPizza");

                    b.HasData(
                        new
                        {
                            PizzaId = 1,
                            IngredientId = 1
                        },
                        new
                        {
                            PizzaId = 2,
                            IngredientId = 1
                        },
                        new
                        {
                            PizzaId = 3,
                            IngredientId = 1
                        });
                });

            modelBuilder.Entity("PizzAPI.models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("firstname");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("lastname");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            IsAdmin = false,
                            LastName = "Doe",
                            Password = "StrongPassword123!"
                        },
                        new
                        {
                            Id = 2,
                            Email = "alice.smith@example.com",
                            FirstName = "Alice",
                            IsAdmin = true,
                            LastName = "Smith",
                            Password = "SecurePass789!"
                        },
                        new
                        {
                            Id = 3,
                            Email = "emma.johnson@example.com",
                            FirstName = "Emma",
                            IsAdmin = false,
                            LastName = "Johnson",
                            Password = "Secret1234!"
                        });
                });

            modelBuilder.Entity("PizzAPI.models.Ingredient", b =>
                {
                    b.HasOne("PizzAPI.models.Pizza", "Pizza")
                        .WithMany("Ingredients")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("PizzAPI.models.PizzaIngredient", b =>
                {
                    b.HasOne("PizzAPI.models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzAPI.models.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("PizzAPI.models.Pizza", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
